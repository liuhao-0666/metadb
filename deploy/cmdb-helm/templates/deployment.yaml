---
{{ $repository := .Values.image.repository}}
{{ $tag := .Values.image.tag }}
{{ $pullPolicy := .Values.env.pullPolicy }}

{{- range .Values.apps }}
  {{- with . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}
  labels:
    app:  {{ .name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app:  {{ .name }}
  template:
    metadata:
      labels:
        app:  {{ .name }}
    spec:
      containers:
        - name:  {{ .name }}
          image: {{ $repository }}cmdb_{{ .name}}:{{ $tag }}
          {{- if $pullPolicy }}
          imagePullPolicy: {{ $pullPolicy }}
          {{- end}}
          ports:
          - containerPort: {{ .port }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: {{ .port }}
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: {{ .port }}
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      initContainers:
        - name: init-redis
          image: harbor.dev.21vianet.com/library/redis:bitnami-6.2.6-debian-10-r103
          command: [ 'sh','-c',"until redis-cli -h redis-master.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local -p 6379 -a cc PING;do echo waiting for redis; sleep 10; done" ]
        - name: init-mongo
          image: harbor.dev.21vianet.com/cmdb/mongo:4.4.13-debian-10-r52
          command: [ 'sh', '-c', 'until mongo "mongodb://cc:cc@mongo-mongodb-0.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local:27017/?replicaSet=rs0&connectTimeoutMS=10000&authSource=cmdb&authMechanism=SCRAM-SHA-256" --disableImplicitSessions --eval "db.serverStatus().connections"; do echo waiting for mongodb1; sleep 10; done' ]

---
{{- end}}
  {{- end }}
